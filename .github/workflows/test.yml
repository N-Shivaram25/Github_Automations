name: Run Language-Specific Tests

on:
  push:
    paths:
      - 'solutions/**'
      - 'tests/**'
      - '.github/workflows/**'
  pull_request:
    paths:
      - 'solutions/**'
      - 'tests/**'
      - '.github/workflows/**'

jobs:
  run-tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 2  # Ensure previous commit is available

      - name: Detect Changed Files
        id: changed-files
        run: |
          BEFORE_COMMIT="${{ github.event.before }}"
          if [ -z "$BEFORE_COMMIT" ] || ! git cat-file -e "$BEFORE_COMMIT"^{commit}; then
            BEFORE_COMMIT=$(git rev-parse HEAD~1)  # Use last commit as fallback
          fi
          
          CHANGED_FILES=$(git diff --name-only "$BEFORE_COMMIT" HEAD | grep '^solutions/' | sort -u)
          echo "Detected changed files: $CHANGED_FILES"
          
          if [ -z "$CHANGED_FILES" ]; then
            echo "No file changes detected in solutions/ directory. Exiting..."
            exit 1
          fi

          echo "CHANGED_FILES=$(echo "$CHANGED_FILES" | tr '\n' ' ')" >> $GITHUB_ENV

      - name: Determine Changed Solution File
        id: detect-language
        run: |
          echo "Detecting changed solution files..."
          CHANGED_FILES="${{ env.CHANGED_FILES }}"

          RUN_C=0
          RUN_CPP=0
          RUN_PYTHON=0
          RUN_JAVA=0
          COUNT=0

          for FILE in $CHANGED_FILES; do
            case "$FILE" in
              solutions/*.c) RUN_C=1; COUNT=$((COUNT+1)) ;;
              solutions/*.cpp) RUN_CPP=1; COUNT=$((COUNT+1)) ;;
              solutions/*.py) RUN_PYTHON=1; COUNT=$((COUNT+1)) ;;
              solutions/*.java) RUN_JAVA=1; COUNT=$((COUNT+1)) ;;
            esac
          done

          echo "RUN_C=$RUN_C" >> $GITHUB_ENV
          echo "RUN_CPP=$RUN_CPP" >> $GITHUB_ENV
          echo "RUN_PYTHON=$RUN_PYTHON" >> $GITHUB_ENV
          echo "RUN_JAVA=$RUN_JAVA" >> $GITHUB_ENV
          echo "SOLUTION_COUNT=$COUNT" >> $GITHUB_ENV

      - name: Stop if multiple solution files changed
        if: env.SOLUTION_COUNT != '1'
        run: |
          echo "❌ You cannot push multiple codes. Only one solution file can be changed at a time."
          exit 1

      - name: Install C Dependencies
        if: env.RUN_C == '1'
        run: |
          sudo apt-get update
          sudo apt-get install -y gcc

      - name: Install C++ Dependencies
        if: env.RUN_CPP == '1'
        run: |
          sudo apt-get update
          sudo apt-get install -y g++

      - name: Install Java Dependencies
        if: env.RUN_JAVA == '1'
        run: |
          sudo apt-get update
          sudo apt-get install -y default-jdk

      - name: Install Python Dependencies
        if: env.RUN_PYTHON == '1'
        run: |
          python3 -m pip install --upgrade pip pytest

      - name: Compile and Run C Tests
        if: env.RUN_C == '1'
        run: |
          gcc -o tests/test tests/test.c solutions/solution.c
          ./tests/test

      - name: Compile and Run C++ Tests
        if: env.RUN_CPP == '1'
        run: |
          g++ -o tests/test tests/test.cpp solutions/solution.cpp
          ./tests/test

      - name: Run Python Tests
        if: env.RUN_PYTHON == '1'
        run: |
          export PYTHONUNBUFFERED=1
          export PYTHONPATH=$PWD
          python3 tests/test.py > test_results.log || true
          cat test_results.log
          if grep -q "❌ Failed" test_results.log; then
            echo "One or more test cases failed."
            exit 1
          else
            echo "All test cases passed."
          fi

      - name: Compile and Run Java Tests
        if: env.RUN_JAVA == '1'
        run: |
          mkdir -p out
          javac -d out solutions/Solution.java tests/Test.java
          java -cp out Test

      - name: Upload Test Results (Python only)
        if: env.RUN_PYTHON == '1'
        uses: actions/upload-artifact@v4
        with:
          name: test-results
          path: test_results.log